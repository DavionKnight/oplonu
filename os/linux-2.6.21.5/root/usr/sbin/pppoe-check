#!/bin/sh
#***********************************************************************
#
# pppoe-check
#
# Shell script to report on status of PPPoE connection
#
# Copyright (C) 2000-2001 Roaring Penguin Software Inc.
#
# $Id$
#
# This file may be distributed under the terms of the GNU General
# Public License.
#
# LIC: GPL
#
# Usage: pppoe-check [config_file]
# If config_file is omitted, defaults to /etc/ppp/pppoe.conf
#
#***********************************************************************

# Defaults
CONFIG=/etc/ppp/pppoe.conf
STATUS=/etc/ppp/pppoe.status

case "$#" in
    1|2)
	CONFIG="$1"
	STATUS="$2"
	;;
esac

if [ ! -f "$CONFIG" -o ! -r "$CONFIG" ] ; then
    echo "down" > $STATUS
    exit 1
fi

. $CONFIG

PPPOE_PIDFILE="$PIDFILE.pppoe"
PPPD_PIDFILE="$PIDFILE.pppd"

# If no PPPOE_PIDFILE, connection is down, unless we're using the Linux plugin
if [ "$LINUX_PLUGIN" = "" ] ; then
    if [ ! -r "$PPPOE_PIDFILE" ] ; then
	echo "down" > $STATUS
	exit 1
    fi
fi

# If no PPPD_PIDFILE, something fishy!
if [ ! -r "$PPPD_PIDFILE" ] ; then
    echo "down" > $STATUS
    exit 1
fi

PPPD_PID=`cat "$PPPD_PIDFILE"`

# Sigh.  Some versions of pppd put PID files in /var/run; others put them
# in /etc/ppp.  Since it's too messy to figure out what pppd does, we
# try both locations.
for i in /etc/ppp/ppp*.pid /var/run/ppp*.pid ; do
    if [ -r $i ] ; then
	PID=`cat $i`
	if [ "$PID" = "$PPPD_PID" ] ; then
	    IF=`basename $i .pid`
	    netstat -rn | grep " ${IF}\$" > /dev/null
	    # /sbin/ifconfig $IF | grep "UP.*POINTOPOINT" > /dev/null
	    if [ "$?" != "0" ] ; then
		echo "down" > $STATUS
		exit 1
	    fi
	    echo "$IF" > $STATUS
	    exit 0
	fi
    fi
done

echo "down" > $STATUS
exit 1