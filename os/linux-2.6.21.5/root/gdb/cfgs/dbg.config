set height 10000
set prompt [dbg@opulan.com]$

#x/20xw (unsigned int)((char *)pRegTest + $arg0)
#command dr
define dr
call orr ($arg0)
end

#comments for dr
document dr
this command display memory from pRegTest + offset which is specified by argument 0.
usage: dr <offset>
end

#command rr, ipmux read register
define rr
call orr ($arg0)
end

#command wr, ipmux write register
define wr
call owr ($arg0, $arg1)
end

#command rt, ipmux read table
define rt
call ort ($arg0, $arg1, $arg2)
end

#command wt, ipmux write table
define wt
call owt ($arg0, $arg1, $arg2, $arg3)
end

#command, modify memory
define mml
set {unsigned int}$arg0=$arg1
x/1xw {unsigned int *}$arg0@1
end

#commnd to display memory in word
#dml addr num
define dml
dont-repeat
x/$arg1xw $arg0
end

#modify memory multiple, 
define mmm
set $my33=$arg0
set $my44=$arg1
set $my55=0
while ($my55 <$my44)
set {unsigned int}$my33=($my55+1)*$arg2
set $my55=$my55+1
set $my33=$my33+4
end
x/$arg1xw $arg0
end

#multiple read registers
define mr
call mrr ($arg0, $arg1)
end

#test register
#testr fromReg regNum val
define testr
set $my11=$arg0
set $my22=0
while ($my22 < $arg1)
call owr($my11+$my22*4, $arg2)
set $my22=$my22+1
end
call mrr ($arg0, $arg1)
end


# NOTES for tt, Test Tables
# parameters:
#	$arg0, table id
#	$arg1, the record NO with which the test start from
#	$myzz, the data values
#	$arg2, the number of record data in $myzz
define tt
set $my11=0
set $myidx=$arg1
set $mynum=$arg2
while (0==$my11)
set $my11=owt($arg0,$myidx,$mynum,$myzz)
call ort($arg0,$myidx,$mynum)
set $myidx=$myidx+$mynum
end
end

document tt
test IPMux tables
Usage:tt tableId fromRec numRec, write table from buffer $myzz
end

#test specified number records of a table
#tt1 tabId fromRec numRec
define tt1
call owt($arg0,$arg1,$arg2,$myzz)
call ort($arg0,$arg1,$arg2)
end


#test multiple tables
#ttm fromTab numTab fromRec numRec
define ttm
set $my11=$arg0
set $my22=$arg1+$arg0
while ($my11 < $my22)
tt1 $my11 $arg2 $arg3
set $my11=$my11+1
end
end

#clear multiple tables
#ttc fromTab numTab fromRec numRec val
define ttc
set $my11=$arg0
set $my22=$arg1+$arg0
while ($my11 < $my22)
call ipmuxTableClear ($my11,$arg2,$arg3,$arg4)
set $my11=$my11+1
end
end

#clear all talbes of IPMux
define tcls
dont-repeat
ttc 0 19 0 10000 0
ttc 20 5 0 10000 0
ttc 32 4 0 10000 0
ttc 40 1 0 10000 0
ttc 42 1 0 10000 0
ttc 44 1 0 10000 0
ttc 47 1 0 10000 0
ttc 49 1 0 10000 0
ttc 51 1 0 10000 0
ttc 64 2 0 10000 0
ttc 67 12 0 10000 0
ttc 112 6 0 10000 0
end

#add flow
#flow up|dowstream num
define flow
set $my11=0
while ($my11 <$arg1)
call ipmuxFlowConfig ($arg0, $my11, 0,0,0,0,$my11%7+1,$my11+1)
set $my11 = $my11+1
end
end

#show flow
#sflow stream show-blank-or-not
define sflow
call ipmuxFlowShow($arg0, 0, 10000,$arg1)
end

define delay
dont-repeat
call oplRtosDelay (100*$arg0)
end

define test
dont-repeat
source /nfs/test
end

define test2
dont-repeat
source /nfs/test2
end

define test3
dont-repeat
source /nfs/test3
end

define test4
dont-repeat
source /nfs/test4
end


define testwx
dont-repeat
source /nfs/testwx
end


define testhhy
dont-repeat
source /nfs/testhhy
end

define testschen
dont-repeat
source /nfs/testschen
end


define iic
dont-repeat
source /nfs/yzhang/i2c
end

define exit
call msgq4IpmuxUninit()
detach
quit
end

define rst
dont-repeat
call ipmuxReset(0x1234)
end

define init
dont-repeat
call ipmuxReset(0xabcd)
end

define htest
dont-repeat
source /nfs/xren/host.test
end

define lhost
dont-repeat
source /nfs/yzhang/host.init
end

define rtest
dont-repeat
source /nfs/rtest
end

#spawn user task
#utask ndelay ntime function p1 p2 p3 p4 p5 p6 p7 p8 p9 
define utask
dont-repeat
call oplRtosTaskCreate ($arg0,$arg1,&($arg2),$arg3,$arg4,$arg5,$arg6,$arg7,$arg8,$arg9,$arg10,$arg11,$arg12)
end

define tbi
dont-repeat
source /nfs/mcliu/ipmux_test.tbi
end

define cfg
dont-repeat
ttc 10 2 0 10000 0
call ipmuxConfigureFromFile ("yzhang/config")
end

define cfgf
dont-repeat
call ipmuxConfigureFromFile ($arg0)
end
